version: '3'

services:
  traefik:
    image: traefik
    container_name: traefik
    env_file: ./docker.env
    environment:
      CF_API_EMAIL: {{ CF_API_EMAIL }}
      CF_API_KEY: /run/secrets/cf_api_key
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    secrets:
      - cf_api_key
    restart: unless-stopped 
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file: ./docker.env
    volumes:
      - /opt/stack-config/radarr:/config
      - /media/movies:/movies
      - /media/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`Odyssey.{{ domain_name }}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.entrypoints=websecure"
    restart: unless-stopped 

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file: ./docker.env
    volumes:
      - /opt/stack-config/sonarr:/config
      - /media/tv:/tv
      - /media/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`Rogue.{{ domain_name }}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    env_file: ./docker.env
    volumes:
      - /opt/stack-config/lidarr:/config
      - /media/music:/music
      - /media/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`Titan.{{ domain_name }}`)"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.lidarr.entrypoints=websecure"      
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    env_file: ./docker.env
    volumes:      
      - /opt/stack-config/jackett:/config
      - /media/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`Paragon.{{ domain_name }}`)"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.entrypoints=websecure"
    ports:
      - 9117
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    env_file: ./docker.env
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    ports:
      - 8191
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    env_file: ./docker.env
    environment:
      - WEBUI_PORT=8080
    volumes:
      - /opt/stack-config/qBittorrent:/config
      - /media/downloads:/downloads
    ports:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`Genesis.{{ domain_name }}`)"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
    restart: unless-stopped

  # firefox:
  #   image: lscr.io/linuxserver/firefox:latest
  #   container_name: firefox
  #   env_file: ./docker.env
  #   network_mode: bridge
  #   restart: unless-stopped

secrets:
  cf_api_key:
    file: ./cf_api_key.txt